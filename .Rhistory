stat_reset_labels(geom = "debug")
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() + geom_text() +
stat_debug_group() +
stat_reset_labels(geom = "debug")
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() + geom_text() +
#  stat_debug_group() +
stat_reset_labels(geom = "debug")
library(ggpmisc)
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() + geom_text() +
#  stat_debug_group() +
stat_reset_labels(geom = "debug")
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_reset_labels(geom = "debug")
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_reset_labels()
library(ggpmisc)
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels()
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
library(ggpmisc)
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
#
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
#
library(ggpmisc)
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
#
library(ggpmisc)
library(ggpmisc)
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
#
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
#
library(ggpmisc)
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
#
library(ggpmisc)
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
#
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels_panel(label.value = "A")
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(cut.fun = dens2d.cut)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(cut.fun =  function(x, y, ...) {TRUE})
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(cut.fun =  function(x, y, ...) {TRUE})
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(cut.fun =  function(x, y, ...) {TRUE}, geom = "debug")
#
ggplot(data = d, aes(x, y, label = lab)) +
# geom_tile(dc, aes(x = Var1, y = Var2, fill = value)) +
geom_point() +
#  stat_debug_group() +
stat_unset_labels(label.value = "A")
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels()
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun = cut.none)
library(ggpmisc)
cut.none
cut.all
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels()
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(label.value = "A")
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(label.value = NA)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  dens2d_cut)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
#' ggplot(data = d, aes(x, y)) +
#'   geom_point() +
#'   stat_unset_labels()
ggplot(data = d, aes(x, y)) +
geom_point() +
stat_unset_labels()
ggplot(data = d, aes(x, y)) +
geom_point() +
stat_unset_labels()
library(ggpmisc)
library(ggpmisc)
ggplot(data = d, aes(x, y)) +
geom_point() +
stat_unset_labels()
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d, cut.fun.args = list(h = 3))
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d, cut.fun.args = list(h = 3))
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
ggplot(data = d, aes(x, y)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels()
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun = cut_none)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun = function(x, y) {x > 0})
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun = function(x, y) {x < 0 & y < 0})
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun = function(data) {data$x < 0 & data$y < 0})
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels_panel(label.value = "A")
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels()
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
group = rep(c("A", "B"), c(50, 50))
lab = replicate(100, { random_string() })
)
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
group = rep(c("A", "B"), c(50, 50)),
lab = replicate(100, { random_string() })
)
#
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_unset_labels_panel(label.value = "x")
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_unset_labels_panel(label.value = c("1","2"))
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_unset_labels(cut.fun =  cut_dens2d)
library(ggpmisc)
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
group = rep(c("A", "B"), c(50, 50)),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
stat_dens2d_labels()
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels()
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels(cut.point = 0.01)
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels(cut.point = 0.33)
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels(cut.point = 0.33)
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels(cut.point = 0.33)
library(ggpmisc)
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_labels()
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels()
library(ggpmisc)
library(ggpmisc)
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
group = rep(c("A", "B"), c(50, 50)),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_filter(color = "red")
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_filter(color = "red")
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_filter(color = "red")
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_filter(color = "red", keep.fraction = 0.33)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_filter(geom = "text")
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab)) +
geom_point() +
stat_dens2d_filter(geom = "text")
ggplot(data = d, aes(x, y)) +
geom_point() +
stat_dens2d_filter(color = "red")
#
ggplot(data = d, aes(x, y)) +
geom_point() +
stat_dens2d_filter(color = "red")
#
library(ggpmisc)
ggplot(data = d, aes(x, y, color = group)) +
geom_point() +
stat_dens2d_filter(shape = "21")
ggplot(data = d, aes(x, y, color = group)) +
geom_point() +
stat_dens2d_filter(shape = "cross")
ggplot(data = d, aes(x, y, color = group)) +
geom_point() +
stat_dens2d_filter(shape = "cross", size = 3)
ggplot(data = d, aes(x, y, color = group)) +
geom_point() +
stat_dens2d_filter(shape = 1, size = 3, color = "black")
ggplot(data = d, aes(x, y)) +
geom_point() +
stat_dens2d_filter(color = "red")
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_filter(geom = "text")
library(ggrepel)
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_filter(geom = "text_repel")
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels(geom = "text_repel")
library(ggpmisc)
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels(geom = "text_repel")
library(ggpmisc)
random_string <- function(len = 6) {
paste(sample(letters, len, replace = TRUE), collapse = "")
}
# Make random data.
set.seed(1001)
d <- tibble::tibble(
x = rnorm(100),
y = rnorm(100),
group = rep(c("A", "B"), c(50, 50)),
lab = replicate(100, { random_string() })
)
ggplot(data = d, aes(x, y, color = group)) +
geom_point() +
stat_dens2d_filter(keep.fraction = 1/3,
shape = 1, size = 3, color = "black")
ggplot(data = d, aes(x, y, label = lab, color = group)) +
geom_point() +
stat_dens2d_labels(geom = "text_repel",
keep.fraction = 0.5,
label.fill = "")
library(ggpmisc)
library(ggpmisc)
knit_with_parameters('D:/aphalo/Documents/RPackages/ggpmisc/vignettes/examples.Rmd')
