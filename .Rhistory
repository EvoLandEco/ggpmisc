stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0) +
facet_wrap(~group)
formula <- y ~ poly(x, 1, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0) +
facet_wrap(~group)
formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0) +
facet_wrap(~group)
set.seed(4321)
# generate artificial data
x <- 1:100
y <- (x + x^2 + x^3) + rnorm(length(x), mean = 0, sd = mean(x^3) / 4)
my.data <- data.frame(x, y, group = c("A", "B"), y2 = y * c(0.5,2))
formula <- y ~ poly(x, 1, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 5, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 1, raw = TRUE)
ggplot(my.data, aes(log(x), y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 1, raw = TRUE)
ggplot(my.data, aes(log(x), y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 1, raw = TRUE)
ggplot(my.data, aes(log(x), y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 1, raw = TRUE)
ggplot(my.data, aes(x, log(y))) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(my.data, aes(x, log(y))) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(my.data, aes(x, log(y + 1))) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(my.data, aes(x, log10(y + 10))) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 2, raw = TRUE)
ggplot(my.data, aes(x, log10(y + 100))) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE, hjust = 0)
library(ggpmisc)
str(summary(lm(y ~ poly(x, 3), my.data)))
library(ggpmisc)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..adj.rr.label..), formula = formula, parse = TRUE, hjust = 0)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..adj.rr.label..), formula = formula, parse = TRUE, hjust = 0)
library(ggpmisc)
set.seed(4321)
# generate artificial data
x <- 1:100
y <- (x + x^2 + x^3) + rnorm(length(x), mean = 0, sd = mean(x^3) / 4)
my.data <- data.frame(x, y, group = c("A", "B"), y2 = y * c(0.5,2))
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula, parse = TRUE, hjust = 0)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula, parse = TRUE, hjust = 0)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula, parse = TRUE)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula, parse = TRUE, hjust = -1)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")),
formula = formula, parse = TRUE)
library(ggpmisc)
install.packages(c("BH", "htmltools", "knitr", "maps", "rJava"))
install.packages("H:/aphalo/Bay Documents/RPackages/ggpmisc_0.1.0.zip", repos = NULL, type = "win.binary")
set.seed(4321)
# generate artificial data
x <- 1:100
y <- (x + x^2 + x^3) + rnorm(length(x), mean = 0, sd = mean(x^3) / 4)
my.data <- data.frame(x, y, group = c("A", "B"), y2 = y * c(0.5,2))
summary(lm(y ~ poly(x, 3, raw = TRUE), data = my.data))
summary(lm(y ~ poly(x, 3), data = my.data))
summary(lm(y ~ x + I(x^2) + I(x^3), data = my.data))
anova(lm(y ~ poly(x, 3, raw = TRUE), data = my.data))
anova(lm(y ~ poly(x, 3), data = my.data))
anova(lm(y ~ x + I(x^2) + I(x^3), data = my.data))
library("polynom", lib.loc="~/R/win-library/3.2")
mf <- lm(y ~ poly(x, 3, raw = TRUE), data = my.data)
summary(mf)
as.polynomial(coef(mf))
source('~/.active-rstudio-document')
devtools::install_bitbucket("ggpmisc", "aphalo")
devtools::install_bitbucket("ggpmisc", "aphalo")
devtools::install_bitbucket("aphalo/ggpmisc")
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggplot2)
library(ggpmisc)
set.seed(4321)
# generate artificial data
x <- 1:100
y <- (x + x^2 + x^3) + rnorm(length(x), mean = 0, sd = mean(x^3) / 4)
my.data <- data.frame(x, y, group = c("A", "B"), y2 = y * c(0.5,2))
ggplot(my.data, aes(x, y)) + geom_point()
ggplot(my.data, aes(x, y)) + geom_point() + stat_debug()
library(ggpmisc)
ggplot(my.data, aes(x, y)) + geom_point() + stat_debug()
library(ggpmisc)
ggplot(my.data, aes(x, y)) + geom_point() + stat_debug()
library(ggpmisc)
ggplot(my.data, aes(x, y)) + geom_point() + stat_debug()
my.diagnostic
library(ggpmisc)
library(ggpmisc)
ggplot(my.df, aes(x,y)) + geom_point() + facet_wrap(~group) + stat_debug()
ggplot(my.data, aes(x, y)) + geom_point() + stat_debug()
ggplot(my.data, aes(x, y, shape = group)) + geom_point() + stat_debug()
ggplot(my.data, aes(x, y)) + geom_point() + stat_debug()
ggplot(my.data, aes(x, y, shape = group)) + geom_point() + stat_debug()
ggplot(my.data, aes(x, y)) + geom_point() + facet_wrap(~group) + stat_debug()
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
library(ggpmisc)
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
library(ggpmisc)
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
library(ggpmisc)
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
library(ggpmisc)
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
library(ggpmisc)
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
ggplot(my.data, aes(x, y, shape = group)) + geom_point() +
stat_debug()
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
stat_debug(geom = "label_repel")
library(ggrepel)
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
stat_debug(geom = "label_repel")
ggplot(my.data, aes(x, y, shape = group)) + geom_point() +
stat_debug(geom = "label_repel")
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
stat_debug()
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
stat_debug(hjust = c(0,1))
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
stat_debug(vjust = c(0,1))
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
stat_debug(vjust = c(-0.5,1.5))
ggplot(my.data, aes(x, y, shape = group)) + geom_point() +
stat_debug(vjust = c(-0.5,1.5))
ggplot(my.data, aes(x, y)) + geom_point() +
facet_wrap(~group) + stat_debug()
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
ggplot(my.data, aes(x, y)) + geom_point() +
facet_wrap(~group) + stat_debug()
ggplot(my.data, aes(x, y, colour = group, shape = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
print(mydata)
print(my.data)
test <- print(my.data)
test <- invisible(print(my.data))
cat(my.data)
test <- dplyr::as_data_frame(my.data)
test
print(test)
testp <- print(test)
testp
class(testp)
library(ggpmisc)
ggplot(my.data, aes(x, y, colour = group, shape = group)) + geom_point() +
facet_wrap(~group) + stat_debug()
ggplot(my.data, aes(x, y, colour = group)) + geom_point() +
stat_debug(vjust = c(-0.5,1.5))
ggplot(my.data, aes(x, y, shape = group)) + geom_point() +
stat_debug(vjust = c(-0.5,1.5))
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
.Rprofile
install.packages(c("digest", "fields", "ggspectra", "ggthemes", "knitr", "maps", "rJava", "USAboundaries"))
install.packages("ggpmisc")
library(ggpmisc)
nhtemp
lynx
as.data.frame(lynx)
data.frame(lynx(as.Matrix(lynx))
)
data.frame(lynx(as.matrix(lynx)))
data.frame(lynx = as.matrix(lynx))
lynx.df <- data.frame(date = as.date(lynx), lynx = as.matrix(lynx))
lynx.df <- data.frame(date = time(lynx), lynx = as.matrix(lynx))
lynx.df
ggplot(lynx.df, aes(date, lynx)) + geom_line()
library(ggplot2)
library(ggpmisc)
lynx.df <- data.frame(date = time(lynx), lynx = as.matrix(lynx))
ggplot(lynx.df, aes(date, lynx)) + geom_line()
time(lynx)
as.numeric(time(lynx))
lynx.df <- data.frame(year = as.numeric(time(lynx)), lynx = as.matrix(lynx))
ggplot(lynx.df, aes(year, lynx)) + geom_line()
ggplot(lynx.df, aes(year, lynx)) + geom_line() + stat_peaks()
library(ggpmisc)
ggplot(lynx.df, aes(year, lynx)) + geom_line() + stat_peaks()
library(ggpmisc)
ggplot(lynx.df, aes(year, lynx)) + geom_line() + stat_peaks()
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_valleys(colour = "blue")
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.2) +
stat_valleys(colour = "blue")
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5) +
stat_valleys(colour = "blue")
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue")
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f")
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text_repel", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f")
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f")
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = 0)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = -10)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = -10, y = 6750)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = -10, y = 680)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = -10, y = 6800)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = -10, y = 6900)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = -10, y = 700)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = c(-10, 700))
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = c(-10, 7000))
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
expand_limits(y = 7000)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
ylim(-20, 6800)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
ylim(-20, 7000)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
ylim(-20, 7000)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
ylim(-20, 7300)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
ylim(-50, 7300)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%4.0f") +
ylim(-100, 7300)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "point", shape = "|", lynx = 0, colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f")
ylim(NA, 7300)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "point", shape = "|", aes(y = 0), colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f")
ylim(NA, 7300)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "rug", colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f")
ylim(NA, 7300)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "rug", colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%4.0f") +
ylim(NA, 7300)
ggplot(lynx.df, aes(year, lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "rug", colour = "red") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "rug", colour = "blue")
library(ggpmisc)
install.packages("venn")
remove.packages("venn", lib="~/R/win-library/3.2")
remove.packages("photobiology", lib="C:/Program Files/R/R-3.2.3/library")
remove.packages("photobiology", lib="C:/Program Files/R/R-3.2.3/library")
remove.packages("photobiologyWavebands", lib="C:/Program Files/R/R-3.2.3/library")
install.packages("memoise")
install.packages("gtable")
install.packages("scales")
library(ggpmisc)
install.packages("DBI")
install.packages("R6")
install.packages("lazyeval")
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
install.packages("fomula.tools")
install.packages("pryr")
as.character(x ~y)
as.character(x ~ y)
as.character(x ~ y + y^2)
library(stringr)
x <- "BBCDEF"
str_sub(x, 1, 1) <- "A"; x
str_sub(x, -1, -1) <- "K"; x
str_sub(x, -2, -2) <- "GHIJ"; x
str_sub(x, 2, -2) <- ""; x
str_sub(x, c(1,3), c(1,3)) <- c("W", "Y")
x
stringr::str_split(as.character(x ~ y + y^2), "x")
stringr::str_split(as.character(x ~ y + y^2)[3], "x")
stringr::str_split(as.character(x ~ y + y^2)[3], "y")
stringr::str_split(as.character(x ~ y + y^2)[3], "y")[[1]]
stringr::str_split(as.character(x ~ y + y^2)[[3]], "y")
stringr::str_split(as.character(x ~ y + y^2)[3], "y")[[1]]
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(photobiology)
library(ggpmisc)
library(ggpmisc)
requireNamespace("rgl", quietly = TRUE)
print(requireNamespace("rgl", quietly = TRUE))
print(requireNamespace("photobiology", quietly = TRUE))
library(ggpmisc)
library(ggpmisc)
library(ggspectra)
library(ggpmisc)
library(ggpmisc)
library(ggspectra)
library(ggpmisc)
library("ggpmisc", lib.loc="~/R/win-library/3.2")
detach("package:ggpmisc", unload=TRUE)
library("ggspectra", lib.loc="~/R/win-library/3.2")
library("ggpmisc", lib.loc="~/R/win-library/3.2")
detach("package:ggpmisc", unload=TRUE)
detach("package:ggspectra", unload=TRUE)
library("ggpmisc", lib.loc="~/R/win-library/3.2")
library("ggspectra", lib.loc="~/R/win-library/3.2")
library(ggpmisc)
library(ggpmisc)
