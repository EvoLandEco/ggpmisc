library(ggpmisc)
ggplot(lynx_t.df, aes(time, V.lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%Y-%m-%d") +
ylim(-100, 7300)
ggplot(lynx_t.df, aes(time, V.lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%Y") +
ylim(-100, 7300)
library(ggpmisc)
ggplot(lynx_t.df, aes(time, V.lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%Y") +
ylim(-100, 7300)
library(ggpmisc)
ggplot(lynx_t.df, aes(time, V.lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%Y") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%Y") +
ylim(-100, 7300)
library(ggpmisc)
ggplot(lynx_t.df, aes(time, V.lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5, x.label.fmt = "%Y") +
stat_valleys(colour = "blue") +
stat_valleys(geom = "text", colour = "blue", vjust = 1.5, x.label.fmt = "%Y") +
ylim(-100, 7300)
library(ggpmisc)
library(ggpmisc)
ggplot(lynx.df, aes(time, V.lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5) +
ylim(-100, 7300)
ggplot(lynx_n.df, aes(time, V.lynx)) + geom_line() +
stat_peaks(colour = "red") +
stat_peaks(geom = "text", colour = "red", vjust = -0.5) +
ylim(-100, 7300)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(xts)
str(try.xts(lynx))
str(zoo::index(try.xts(lynx)))
tz(zoo::index(try.xts(lynx)))
lubridate::tz(zoo::index(try.xts(lynx)))
library(ggplot2)
library(ggpmisc)
library(xts)
library(lubridate)
class(austres)
austres.df <- try_data_frame(austres)
class(austres.df)
lapply(austres.df, "class")
head(austres.df, 4)
head(with_tz(austres.df, "UTC"))
austres.df$time <- with_tz(austres.df$time, "UTC")
head(austres.df, 4)
library(ggpmisc)
library(ggpmisc)
austres.df <- try_data_frame(austres)
lubridate::tz(times)
austres.df <- try_data_frame(austres)
ltimes.raw
lubridate::tz(times)
str(data.xts)
library(ggpmisc)
austres.df <- try_data_frame(austres)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
install.packages("roxygen2")
install.packages("lubridate")
install.packages("xts")
install.packages("ggplot2")
install.packages("splus2R")
install.packages("polynom")
install.packages("knitr")
install.packages("rmarkdown")
library(ggpmisc)
install.packages("ggrepel")
install.packages("L:/aphalo/Documents/RPackages/ggpmisc_0.2.5.tar.gz", repos = NULL, type = "source")
install.packages("L:/aphalo/Documents/RPackages/ggpmisc_0.2.5.tar.gz", repos = NULL, type = "source")
library(ggpmisc)
install.packages("ggrepel")
library(ggpmisc)
install.packages("devtools")
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
install.packages("L:/aphalo/Documents/RPackages/ggpmisc_0.2.6.zip", repos = NULL, type = "win.binary")
library(ggpmisc)
install.packages("L:/aphalo/Documents/RPackages/ggpmisc_0.2.6.zip", repos = NULL, type = "win.binary")
install.packages("L:/aphalo/Documents/RPackages/ggpmisc_0.2.6.zip", repos = NULL, type = "win.binary")
devtools::install_github("hadley/ggplot2")
devtools::install_github("hadley/ggplot2")
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.use.lhs = "italics(hat(y))~=~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italics(hat(y))~=~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italics(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
library(ggplot2)
library(ggpmisc)
df <- data.frame(x = c(1:100))
df$y <- 2 + 3 * df$x + rnorm(100, sd = 40)
my.formula <- y ~ x
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(hat(y))~`=`~",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
geom_point()
p
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.use.lhs = "italic(h)~=~",
e.x.rhs = "italic(z)",
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE) +
labs(x = "italic(z)", y = "italic(h)", parse = TRUE) +
geom_point()
p
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(h)~`=`~",
eq.x.rhs = "italic(z)",
aes(label = ..eq.label..),
parse = TRUE) +
labs(x = "italic(z)", y = "italic(h)", parse = TRUE) +
geom_point()
p
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(h)~`=`~",
eq.x.rhs = "~italic(z)",
aes(label = ..eq.label..),
parse = TRUE) +
labs(x = "italic(z)", y = "italic(h)", parse = TRUE) +
geom_point()
p
p <- ggplot(data = df, aes(x = x, y = y)) +
geom_smooth(method = "lm", se=FALSE, color="black", formula = my.formula) +
stat_poly_eq(formula = my.formula,
eq.with.lhs = "italic(h)~`=`~",
eq.x.rhs = "~italic(z)",
aes(label = ..eq.label..),
parse = TRUE) +
labs(x = expression(italic(z)), y = expression(italic(h))) +
geom_point()
p
str(summary(lm(my.formula, data ) df))
str(summary(lm(my.formula, data = df)))
AIC(lm(my.formula, data = df))
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
gsub("e([+-]?[:digit:]+)", "*10^\1", eq.char)
eq.char <- "10e5"
gsub("e([+-]?[:digit:]+)", "*10^\1", eq.char)
grep("e([+-]?[:digit:]+)", eq.char)
grep("e[+-]?[:digit:]+", eq.char)
grep("e[:digit:]+", eq.char)
grep("e[:digit:]*", eq.char)
grep("e[+-]?[:digit:]*", eq.char)
gsub("e([+-]?[:digit:]*)", "*10^\1", eq.char)
cat(gsub("e([+-]?[:digit:]*)", "*10^\1", eq.char))
library(ggpmisc)
library(ggpmisc)
eq.char <- "10e5"
cat(gsub("e([+-]?[:digit:]*)", "*10^\1", eq.char))
gsub("e([+-]?[:digit:]*)", "*10^\1", eq.char)
gsub("e([+-]?[0-9]*)", "*10^\1", eq.char)
gsub("e([+-]?[0-9]*)", "*10^\1", eq.char, fixed = FALSE)
gsub("e([+-]?[0-9]*)", "*10^\\1", eq.char, fixed = FALSE)
gsub("e([+-]?[0-9]*)", "*10^\\1", eq.char)
library(ggpmisc)
library(ggpmisc)
install.packages("L:/aphalo/Documents/RPackages/ggpmisc_0.2.6.9000.zip", repos = NULL, type = "win.binary")
install.packages("L:/aphalo/Documents/RPackages/ggpmisc_0.2.6.9000.zip", repos = NULL, type = "win.binary")
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggplot2)
library(ggpmisc)
library(xts)
library(lubridate)
library(ggplot2)
library(ggpmisc)
library(xts)
library(lubridate)
class(austres)
austres.df <- try_data_frame(austres)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggpmisc)
library(ggplot2)
library(ggpmisc)
library(xts)
library(lubridate)
set.seed(4321)
# generate artificial data
x <- 1:100
y <- (x + x^2 + x^3) + rnorm(length(x), mean = 0, sd = mean(x^3) / 4)
my.data <- data.frame(x, y, group = c("A", "B"), y2 = y * c(0.5,2))
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(-8, 0),
formula = formula, parse = TRUE,
label.x = 0) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(-8, 0),
formula = formula, parse = TRUE,
label.x = 0) +
theme_bw()
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(-8, 0),
formula = formula, parse = TRUE,
label.x = 0) +
theme_bw()
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(-8, 0),
formula = formula, parse = TRUE,
label.x = 0) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..),
formula = formula, parse = TRUE,
label.x = 0, label.y = c(2e6, 1.8e6)) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(-2, 0),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(2, 0),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(1.5, 0),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
theme_bw()
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(1.5, 0),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
theme_bw()
formula <- y ~ poly(x, 5, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE)
4 %\%2
4 %/%2
3 %/%2
4 %/% 1
5 %/% 2
5 %% 2
1 %% 2
2 %%2
is.null(numeric(0))
length(NULL)
rep(c(1,2), length.out = 3)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
labs(x = expression(italic(z)), y = expression(italic(h)) ) +
stat_poly_eq(aes(label = ..eq.label..),
eq.with.lhs = "italic(h)~`=`~",
eq.x.rhs = "~italic(z)",
formula = formula, parse = TRUE)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), size = rel(3),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
facet_wrap(~group)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), size = rel(3),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
facet_wrap(~group)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), size = rel(3),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
facet_wrap(~group)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), size = rel(3),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
facet_wrap(~group)
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), size = rel(3),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
facet_wrap(~group)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), size = rel(3),
formula = formula, parse = TRUE) +
facet_wrap(~group, scales = "free_y")
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), vjust = c(1.5, 0),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..),
formula = formula, parse = TRUE,
label.x = 0, label.y = 2e6) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..),
formula = formula, parse = TRUE,
label.x = 0, label.y = c(1.9e6, 2e6)) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..),
formula = formula, parse = TRUE,
label.x = 0, label.y = c(1.8e6, 2e6)) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..),
hjust = c(0, -0.3),
formula = formula, parse = TRUE,
label.x = 0, label.y = c(1.8e6, 2e6)) +
theme_bw()
library(ggpmisc)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..),
hjust = c(0, -0.3),
formula = formula, parse = TRUE,
label.x = 0, label.y = c(1.8e6, 2e6)) +
theme_bw()
library(ggpmisc)
load("L:/aphalo/Documents/RPackages/ggpmisc/.RData")
library(ggplot2)
library(ggpmisc)
library(xts)
library(lubridate)
set.seed(4321)
# generate artificial data
x <- 1:100
y <- (x + x^2 + x^3) + rnorm(length(x), mean = 0, sd = mean(x^3) / 4)
my.data <- data.frame(x, y, group = c("A", "B"), y2 = y * c(0.5,2))
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(formula = formula, parse = TRUE)
formula <- y ~ poly(x, 5, raw = TRUE)
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula, parse = TRUE)
formula <- y ~ x + I(x^2) + I(x^3) - 1
ggplot(my.data, aes(x, y)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), formula = formula,
parse = TRUE)
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..), size = rel(3),
formula = formula, parse = TRUE) +
facet_wrap(~group, scales = "free_y")
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..),
hjust = c(0, -0.3),
formula = formula, parse = TRUE,
label.x = 0, label.y = c(1.8e6, 2e6)) +
theme_bw()
formula <- y ~ poly(x, 3, raw = TRUE)
ggplot(my.data, aes(x, y2, colour = group)) +
geom_point() +
geom_smooth(method = "lm", formula = formula) +
stat_poly_eq(aes(label = ..eq.label..),
formula = formula, parse = TRUE,
label.x = 0, label.y = c(2e6, 1.8e6)) +
theme_bw()
