% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-table.R
\name{ttheme_gtdefault}
\alias{ttheme_gtdefault}
\alias{ttheme_gtminimal}
\alias{ttheme_gtbw}
\alias{ttheme_gtplain}
\alias{ttheme_gtdark}
\title{Table themes}
\usage{
ttheme_gtdefault(
  base_size = 12,
  base_colour = "white",
  base_family = "",
  parse = FALSE,
  padding = unit(c(1, 0.6), "char"),
  ...
)

ttheme_gtminimal(
  base_size = 12,
  base_colour = "white",
  base_family = "",
  parse = FALSE,
  padding = unit(c(1, 0.6), "char"),
  ...
)

ttheme_gtbw(
  base_size = 12,
  base_colour = "black",
  base_family = "",
  parse = FALSE,
  padding = unit(c(1, 0.6), "char"),
  ...
)

ttheme_gtplain(
  base_size = 12,
  base_colour = "white",
  base_family = "",
  parse = FALSE,
  padding = unit(c(1, 0.6), "char"),
  ...
)

ttheme_gtdark(
  base_size = 12,
  base_colour = "white",
  base_family = "",
  parse = FALSE,
  padding = unit(c(1, 0.6), "char"),
  ...
)
}
\arguments{
\item{base_size}{numeric, default font size.}

\item{base_colour}{default font colour.}

\item{base_family}{default font family.}

\item{parse}{logical, default behaviour for parsing text as plotmath.}

\item{padding}{length-2 unit vector specifying the horizontal and vertical
padding of text within each cell.}

\item{...}{further arguments to control the gtable.}
}
\description{
Addtional theme constructors for tables
}
\note{
These theme constructors are wrappers on
  \code{gridExtra::ttheme_default()} and \code{gridExtra::ttheme_minimal()}.
}
\examples{
library(dplyr)
library(tibble)

mtcars \%>\%
  group_by(cyl) \%>\%
  summarize(wt = mean(wt), mpg = mean(mpg)) \%>\%
  ungroup() \%>\%
  mutate(wt = sprintf("\%.2f", wt),
         mpg = sprintf("\%.1f", mpg)) -> tb

df <- tibble(x = 5.45, y = 34, tb = list(tb))

ggplot(mtcars, aes(wt, mpg, colour = factor(cyl))) +
  geom_point() +
  geom_table(data = df, aes(x = x, y = y, label = tb),
             table.theme = ttheme_gtminimal) +
  theme_classic()

ggplot(mtcars, aes(wt, mpg, colour = factor(cyl))) +
  geom_point() +
  geom_table(data = df, aes(x = x, y = y, label = tb),
             table.theme = ttheme_gtbw) +
  theme_bw()

ggplot(mtcars, aes(wt, mpg, colour = factor(cyl))) +
  geom_point() +
  geom_table(data = df, aes(x = x, y = y, label = tb),
             table.theme = ttheme_gtdark, color = "white") +
  theme_dark()


}
