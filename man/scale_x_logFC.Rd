% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale-continuous-omics.r
\name{scale_x_logFC}
\alias{scale_x_logFC}
\alias{scale_y_logFC}
\title{Position scales for log fold change data}
\usage{
scale_x_logFC(name = "Abundance\%unit", breaks = NULL, labels = NULL,
  log.base.labels = FALSE, log.base.data = 2L, ...)

scale_y_logFC(name = "Abundance of y\%unit", breaks = NULL,
  labels = NULL, log.base.labels = FALSE, log.base.data = 2L, ...)
}
\arguments{
\item{name}{The name of the scale without units, used for the axis-label.}

\item{breaks}{The positions of ticks or a function to generate them. Default
varies depending on argument passed to \code{log.base.labels}.}

\item{labels}{The tick labels or a function to generate them from the tick
positions. The default is function that uses the arguments passed to
\code{log.base.data} and \code{log.base.labels} to generate suitable
labels.}

\item{log.base.labels, log.base.data}{integer or logical Base of logarithms used to
express fold-change values in tick labels and in \code{data}. Use \code{FALSE}
for no logarithm transformation.}

\item{...}{other named arguments passed to \code{scale_y_continuous}.}
}
\description{
Continuous scales for x and y aesthetics with defaults suitable for values
expressed as log2 fold change in \code{data} and fold-change in tick labels.
Supports tick labels and data expressed in any combination of fold-change,
log2 fold-change and log10 fold-change. Supports addition of units to
axis labels passed as argument to the \code{name} formal parameter.
}
\details{
These scales only alter three default arguments of
  \code{scale_x_continuous()} and \code{scale_y_continuous()}. Please, see
  documentation for \code{\link[ggplot2]{scale_continuous}} for details. The
  name argument supports the use of \code{"\%unit"} at the end of the string to
  automatically add a units string, otherwise user-supplied values for
  names, breaks, and labels work as usual.
}
\examples{

set.seed(12346)
my.df <- data.frame(x = rnorm(50, sd = 4), y = rnorm(50, sd = 4))

ggplot(my.df, aes(x, y)) +
  geom_point() +
  scale_x_logFC() +
  scale_y_logFC()

ggplot(my.df, aes(x, y)) +
  geom_point() +
  scale_x_logFC(log.base.labels = 2) +
  scale_y_logFC(log.base.labels = 2)

ggplot(my.df, aes(x, y)) +
  geom_point() +
  scale_x_logFC("A concentration\%unit", log.base.labels = 10) +
  scale_y_logFC("B concentration\%unit", log.base.labels = 10)

# override "special" default arguments.
ggplot(my.df, aes(x, y)) +
  geom_point() +
  scale_x_logFC("A concentration",
                breaks = waiver(),
                labels = waiver()) +
  scale_y_logFC("B concentration",
                breaks = waiver(),
                labels = waiver())

}
