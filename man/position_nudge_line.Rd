% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/position-nudge-line.R
\name{position_nudge_line}
\alias{position_nudge_line}
\title{Nudge labels a variable distance from points}
\usage{
position_nudge_line(
  x = 0,
  y = 0,
  abline = NULL,
  method = NULL,
  formula = y ~ x,
  direction = NULL,
  line_nudge = 1
)
}
\arguments{
\item{x, y}{Amount of vertical and horizontal distance to move. A numeric
vector of length 1, or of the same length as rows there are in `data`.}

\item{abline}{a vector of length two giving the intercept and slope.}

\item{method}{One of `"spline"`, `"lm"` or `"auto"`.}

\item{formula}{A model formula for [lm()] when `method = "lm"`. Ignored
otherwise.}

\item{direction}{One of "none", or "split".}

\item{line_nudge}{A positive multiplier >= 1, increasing nudging
away from the curve or line compared to nudging from points.}
}
\description{
`position_nudge_line` is generally useful for adjusting the starting
position of labels or text to be repelled while preserving the original
position as the start of the segments. The difference compared to
[position_nudge_center()] is that the nudging is away from from a line or
curve fitted to the data points or supplied as coefficients. While
[position_nudge_center()] is most useful for "round-shaped", vertically- or
horizontally elongated clouds of points, [position_nudge_line()] is most
suitable when observations follow a linear or curvilinear relationship
between _x_ and _y_ values.
}
\details{
When `direction = "split"` nudging is away from an implicit line or
  curve on either side. The line of curve can be smooth spline or linear
  regression fitted on-the-fly to the data points, or a straight line defined
  by its coefficients passed to `abline`. The fitting is well defined only if
  the observations fall roughly on a curve or straight line that is monotonic
  in `y`. By means of `line_nudge` one can increment nudging away from the
  line or curve compared to away from the points, which is useful for example
  to keep labels outside of a confidence band. Direction defaults to
  `"split"` when `line_nudge > 1`, and otherwise to `"none"`.
}
\note{
Only model formulas corresponding to polynomials with no missing
  terms are supported. Use of [poly()] is recommended.
}
\examples{

set.seed(16532)
df <- data.frame(
  x = -10:10,
  y = (-10:10)^2,
  yy = (-10:10)^2 + rnorm(21, 0, 4),
  yyy = (-10:10) + rnorm(21, 0, 4),
  l = letters[1:21]
)

# Point on a line or curve

ggplot(df, aes(x, y)) +
  geom_point() +
  geom_line() +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 0.6, y = 4))

ggplot(df, aes(x, y)) +
  geom_point() +
  geom_line() +
  geom_text(aes(label = l),
            position = position_nudge_line(x = -0.6, y = -4))

ggplot(df, aes(x, -y)) +
  geom_point() +
  geom_line() +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 0.6, y = 4))

ggplot(df, aes(x, y - 40)) +
  geom_point() +
  geom_line() +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 0.6, y = 4))

ggplot(subset(df, x >= 0), aes(y, sqrt(y))) +
  geom_point() +
  geom_line() +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 6, y = 0.4))

ggplot(subset(df, x >= 0), aes(y, sqrt(y))) +
  geom_point() +
  geom_line() +
  geom_text(aes(label = l),
                  position = position_nudge_line(x = -8, y = -0.2))

ggplot(df, aes(x, x * 2 + 5)) +
  geom_point() +
  geom_line() +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 0.5, y = 1,
                                           abline = c(5, 2)))

# Points scattered near a curve or line, we use 'direction = "split"'
ggplot(df, aes(x)) +
  geom_point(aes(y = yy)) +
  geom_line(aes(y = y)) +
  geom_text(aes(y = yy, label = l),
            position = position_nudge_line(x = 0.5, y = 4,
                                           direction = "split"))

ggplot(subset(df, x >= 0), aes(y, yy)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 2, y = 3,
                                           direction = "split"))

ggplot(subset(df, x >= 0), aes(x, yyy)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 0.3, y = 0.6,
                                           line_nudge = 1.1,
                                           direction = "split"))

ggplot(subset(df, x >= 0), aes(y, yy)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 3, y = 3,
                                           method = "linear",
                                           direction = "split"))

ggplot(subset(df, x >= 0), aes(y, yy)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 3, y = 3,
                                           abline = c(0, 1),
                                           direction = "split"))

ggplot(subset(df, x >= 0), aes(y, -yy)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  geom_text(aes(label = l),
            position = position_nudge_line(x = 3, y = 3,
                                           method = "linear",
                                           direction = "split"))

}
\seealso{
Other position adjustments: 
\code{\link{position_nudge_center}()}
}
\concept{position adjustments}
